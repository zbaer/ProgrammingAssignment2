## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <- NULL
}
get <- function() {
x
}
setinverse <- function(inverse) {
i <<- inverse
}
getinverse <- function() {
i
}
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if (!is.null(i)) {
message("getting cached inverse")
return(i)
}
mat <- x$get()
i <- solve(mat, ...)
x$setinverse(i)
i
}
makeCacheMatrix
makeCacheMatrix()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean()
makeVector()
makeVector(4)
m<-NULL
makeVector()
cachemean()
makeVector()
m
x
makeVector()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <- NULL
}
get <- function() {
x
}
setinverse <- function(inverse) {
i <<- inverse
}
getinverse <- function() {
i
}
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if (!is.null(i)) {
message("getting cached inverse")
return(i)
}
mat <- x$get()
i <- solve(mat, ...)
x$setinverse(i)
i
}
p=matrix(11:14,2,2)
pp<-makeCacheMatrix(p)
cacheSolve(pp)
pp
p
cacheSolve(pp)
solve(p)
cacheSolve(pp)
p<matrix(13:7890,2,2)
p<-matrix(13:7890,2,2)
pp<-makeCacheMatrix(p)
cacheSolve(pp)
cacheSolve(pp)
p<-matrix(13:7890,13,13)
pp<-makeCacheMatrix(p)
cacheSolve(pp)
p<-matrix(13:7890,7,7)
